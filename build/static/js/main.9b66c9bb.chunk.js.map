{"version":3,"sources":["pages/DistanceFinder.js","pages/SkiResortFilter.js","App.js","index.js"],"names":["DistanceFinder","latitude","setLatitude","useState","longitude","setLongitude","distances","setDistances","loading","setLoading","error","setError","useEffect","console","log","React","createElement","style","display","alignItems","justifyContent","height","width","backgroundImage","backgroundSize","backgroundPosition","flexDirection","textAlign","background","padding","borderRadius","boxShadow","maxWidth","role","aria-label","margin","onClick","navigator","geolocation","getCurrentPosition","position","coords","toFixed","type","placeholder","value","onChange","e","target","border","async","apiURL","response","fetch","data","json","ok","err","color","length","listStyle","map","resort","index","key","marginBottom","name","travelTime","distance","delay","includes","speed","Link","to","SkiResortFilter","filters","setFilters","lifts","trails","terrainParks","terrainType","resorts","setResorts","filteredResorts","setFilteredResorts","then","formattedResorts","beginner","intermediate","advanced_expert","skiableTerrain","baseElevation","highestElevation","averageSnowfall","mostDifficultTerrain","catch","handleChange","handleFindResorts","fontSize","transition","Home","fontWeight","textDecoration","App","Router","Routes","Route","path","element","rootElement","document","getElementById","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.9b66c9bb.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst DistanceFinder = () => {\n  const [latitude, setLatitude] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [distances, setDistances] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const getDistances = async () => {\n    if (!latitude || !longitude) {\n      setError(\"Please enter valid latitude and longitude.\");\n      return;\n    }\n\n    setLoading(true);\n    setError(\"\");\n\n    try {\n      const apiURL = `https://api.theperfectmountain.com/api/getDistances?lat=${latitude}&lon=${longitude}`;\n      console.log(`Fetching data from: ${apiURL}`);\n\n      const response = await fetch(apiURL);\n      const data = await response.json();\n      \n      console.log(\"API Response:\", data); // Debugging log\n\n      if (!response.ok || data.error) {\n        setError(data.error || \"Error fetching distances.\");\n        setDistances([]);\n      } else {\n        setDistances(data);\n      }\n    } catch (err) {\n      setError(\"Error fetching distances.\");\n      console.error(\"Fetch error:\", err);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    console.log(\"Distances Updated:\", distances);\n  }, [distances]); // Debugging log to track updates\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n        width: \"100%\",\n        backgroundImage: \"url('https://silvertonmountain.com/wp-content/uploads/2023/12/AB-shot-of-Sven-2014.jpg')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          textAlign: \"center\",\n          background: \"rgba(255, 255, 255, 0.9)\",\n          padding: \"20px\",\n          borderRadius: \"10px\",\n          boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\",\n          maxWidth: \"500px\",\n          width: \"90%\",\n        }}\n      >\n        <h1>\n          <span role=\"img\" aria-label=\"mountain\">🏔️</span> Find Your Ski Resort Distance\n        </h1>\n\n        <button\n          style={{\n            display: \"block\",\n            margin: \"10px auto\",\n            padding: \"10px 20px\",\n          }}\n          onClick={() => {\n            navigator.geolocation.getCurrentPosition(\n              (position) => {\n                setLatitude(position.coords.latitude.toFixed(4));\n                setLongitude(position.coords.longitude.toFixed(4));\n              },\n              () => setError(\"Unable to retrieve location.\")\n            );\n          }}\n        >\n          <span role=\"img\" aria-label=\"location pin\">📍</span> Use My Location\n        </button>\n\n        <input\n          type=\"text\"\n          placeholder=\"Latitude\"\n          value={latitude}\n          onChange={(e) => setLatitude(e.target.value)}\n          style={{\n            textAlign: \"center\",\n            width: \"80%\",\n            padding: \"10px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"5px\",\n            margin: \"5px auto\",\n          }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Longitude\"\n          value={longitude}\n          onChange={(e) => setLongitude(e.target.value)}\n          style={{\n            textAlign: \"center\",\n            width: \"80%\",\n            padding: \"10px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"5px\",\n            margin: \"5px auto\",\n          }}\n        />\n\n        <button onClick={getDistances} style={{ display: \"block\", margin: \"10px auto\", padding: \"10px 20px\" }}>\n          <span role=\"img\" aria-label=\"location pin\">📍</span> Get Distance\n        </button>\n\n        {loading && <p>Loading...</p>}\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n        <h2>\n          <span role=\"img\" aria-label=\"ruler\">📏</span> Distances to Ski Resorts:\n        </h2>\n        {distances.length > 0 ? (\n          <ul style={{ listStyle: \"none\", padding: 0 }}>\n            {distances.map((resort, index) => (\n              <li\n                key={index}\n                style={{\n                  background: \"#f8f8f8\",\n                  padding: \"15px\",\n                  borderRadius: \"8px\",\n                  marginBottom: \"10px\",\n                  boxShadow: \"2px 2px 10px rgba(0, 0, 0, 0.1)\",\n                  textAlign: \"left\",\n                  width: \"100%\",\n                }}\n              >\n                <strong>{resort.name}</strong>\n                <br />\n                Travel Time: {resort.travelTime}\n                <br />\n                Distance: {resort.distance} miles\n                <br />\n                Delay Due to Traffic: {resort.delay.includes(\"min\") ? resort.delay : `${resort.delay} min`}\n                <br />\n                Estimated Average Speed: {resort.speed} mph\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No data available.</p>\n        )}\n\n        <Link to=\"/\">\n          <button\n            style={{\n              display: \"block\",\n              margin: \"10px auto\",\n              padding: \"10px 20px\",\n              background: \"#007bff\",\n              color: \"white\",\n              borderRadius: \"5px\",\n              boxShadow: \"2px 2px 10px rgba(0, 0, 0, 0.2)\",\n            }}\n          >\n            ⬅ Back to Home\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default DistanceFinder;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst SkiResortFilter = () => {\n  const [filters, setFilters] = useState({\n    lifts: \"Any\",\n    trails: \"Any\",\n    terrainParks: \"Any\",\n    terrainType: \"beginner\",\n  });\n\n  const [resorts, setResorts] = useState([]);\n  const [filteredResorts, setFilteredResorts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\"https://api.theperfectmountain.com/api/resorts\")\n      .then((response) => response.json())\n      .then((data) => {\n        // Convert API data into proper format\n        const formattedResorts = data.map((resort) => ({\n          name: resort.name,\n          lifts: resort[\"Total Lifts\"] || \"N/A\",\n          trails: resort[\"Total Runs\"] || \"N/A\",\n          terrainParks: resort[\"Terrain Parks\"] || \"N/A\",\n          beginner: resort[\"Beginner Terrain\"] || \"N/A\",\n          intermediate: resort[\"Intermediate Terrain\"] || \"N/A\",\n          advanced_expert: resort[\"Advanced/Expert Terrain\"] || \"N/A\",\n          skiableTerrain: resort[\"Skiable Terrain\"] || \"N/A\",\n          baseElevation: resort[\"Base Elevation\"] || \"N/A\",\n          highestElevation: resort[\"Highest Elevation\"] || \"N/A\",\n          averageSnowfall: resort[\"Average Snowfall\"] || \"N/A\",\n          mostDifficultTerrain: resort[\"Most Difficult Terrain\"] || \"N/A\",\n        }));\n\n        setResorts(formattedResorts);\n        setLoading(false);\n      })\n      .catch(() => setLoading(false));\n  }, []);\n\n  const handleChange = (e) => {\n    setFilters({ ...filters, [e.target.name]: e.target.value });\n  };\n\n  const handleFindResorts = () => {\n    setFilteredResorts(resorts);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n        width: \"100%\",\n        backgroundImage: \"url('https://silvertonmountain.com/wp-content/uploads/2023/12/AB-shot-of-Sven-2014.jpg')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      {/* Centered Content Box */}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          textAlign: \"center\",\n          background: \"rgba(255, 255, 255, 0.9)\",\n          padding: \"20px\",\n          borderRadius: \"10px\",\n          boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\",\n          maxWidth: \"700px\",\n          width: \"90%\",\n        }}\n      >\n        <h1>\n\t  <span role=\"img\" aria-label=\"ski\">🎿</span> Ski Resort Finder\n\t</h1>\n\n        {/* Filter Inputs */}\n        <div style={{ width: \"100%\" }}>\n          <label>Lifts: </label>\n          <select name=\"lifts\" value={filters.lifts} onChange={handleChange} style={{ width: \"100%\", padding: \"10px\", marginBottom: \"10px\" }}>\n            <option value=\"Any\">Any</option>\n            <option value=\"5\">5+</option>\n            <option value=\"10\">10+</option>\n            <option value=\"20\">20+</option>\n          </select>\n\n          <label> Trails: </label>\n          <select name=\"trails\" value={filters.trails} onChange={handleChange} style={{ width: \"100%\", padding: \"10px\", marginBottom: \"10px\" }}>\n            <option value=\"Any\">Any</option>\n            <option value=\"50\">50+</option>\n            <option value=\"100\">100+</option>\n            <option value=\"150\">150+</option>\n          </select>\n\n          <label> Terrain Parks: </label>\n          <select name=\"terrainParks\" value={filters.terrainParks} onChange={handleChange} style={{ width: \"100%\", padding: \"10px\", marginBottom: \"10px\" }}>\n            <option value=\"Any\">Any</option>\n            <option value=\"1\">1+</option>\n            <option value=\"3\">3+</option>\n            <option value=\"5\">5+</option>\n          </select>\n\n          <label> Select Terrain Type: </label>\n          <select name=\"terrainType\" value={filters.terrainType} onChange={handleChange} style={{ width: \"100%\", padding: \"10px\", marginBottom: \"10px\" }}>\n            <option value=\"beginner\">Beginner</option>\n            <option value=\"intermediate\">Intermediate</option>\n            <option value=\"advanced_expert\">Advanced/Expert</option>\n          </select>\n        </div>\n\n        {/* Find Resorts Button */}\n        <button\n          onClick={handleFindResorts}\n          style={{\n            display: \"block\",\n            margin: \"10px auto\",\n            padding: \"10px 20px\",\n            fontSize: \"18px\",\n            background: \"#fff\",\n            borderRadius: \"5px\",\n            boxShadow: \"2px 2px 10px rgba(0, 0, 0, 0.2)\",\n            transition: \"0.3s\",\n          }}\n        >\n          Find Resorts\n        </button>\n\n        {/* Resort Results */}\n        <h2>\n\t  <span role=\"img\" aria-label=\"mountain\">🏔️ </span> Best Ski Resorts for Selected Terrain\n\t</h2>\n        {loading ? (\n          <p>Loading ski resorts...</p>\n        ) : filteredResorts.length > 0 ? (\n          <ul style={{ listStyle: \"none\", padding: 0, textAlign: \"left\", width: \"100%\" }}>\n            {filteredResorts.map((resort) => (\n              <li\n                key={resort.name}\n                style={{\n                  background: \"#f8f8f8\",\n                  padding: \"15px\",\n                  borderRadius: \"8px\",\n                  marginBottom: \"10px\",\n                  boxShadow: \"2px 2px 10px rgba(0, 0, 0, 0.1)\",\n                }}\n              >\n                <strong>{resort.name}</strong>\n                <br />\n                Lifts: {resort.lifts}, Trails: {resort.trails}, Terrain Parks: {resort.terrainParks}\n                <br />\n                Beginner Terrain: {resort.beginner}%\n                <br />\n                Intermediate Terrain: {resort.intermediate}%\n                <br />\n                Advanced/Expert Terrain: {resort.advanced_expert}%\n                <br />\n                Skiable Terrain: {resort.skiableTerrain}\n                <br />\n                Base Elevation: {resort.baseElevation} ft\n                <br />\n                Highest Elevation: {resort.highestElevation} ft\n                <br />\n                Average Snowfall: {resort.averageSnowfall} inches\n                <br />\n                Most Difficult Terrain: {resort.mostDifficultTerrain}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No resorts match your filters. Try adjusting them.</p>\n        )}\n\n        {/* Back Button */}\n        <Link to=\"/\">\n          <button\n            style={{\n              display: \"block\",\n              margin: \"10px auto\",\n              padding: \"10px 20px\",\n              background: \"#007bff\",\n              color: \"white\",\n              borderRadius: \"5px\",\n              boxShadow: \"2px 2px 10px rgba(0, 0, 0, 0.2)\",\n            }}\n          >\n            ⬅ Back to Home\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default SkiResortFilter;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport DistanceFinder from \"./pages/DistanceFinder\";\nimport SkiResortFilter from \"./pages/SkiResortFilter\";\n\nconst Home = () => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n        width: \"100%\",\n        backgroundImage: \"url('https://silvertonmountain.com/wp-content/uploads/2023/12/AB-shot-of-Sven-2014.jpg')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      {/* Centered Content Box */}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          textAlign: \"center\",\n          background: \"rgba(255, 255, 255, 0.9)\",\n          padding: \"30px\",\n          borderRadius: \"10px\",\n          boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\",\n          maxWidth: \"500px\",\n          width: \"90%\",\n        }}\n      >\n        <h1 style={{ fontSize: \"36px\", fontWeight: \"bold\" }}>Ski Bums</h1>\n        <p style={{ fontSize: \"18px\", marginBottom: \"20px\" }}>\n          Your One Stop Shop for the Perfect Ski Day\n        </p>\n\n        {/* Navigation Buttons */}\n        <Link\n          to=\"/filter\"\n          style={{\n            textDecoration: \"none\",\n            display: \"block\",\n            margin: \"10px auto\",\n            padding: \"15px 30px\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\",\n            background: \"#007bff\",\n            color: \"white\",\n            borderRadius: \"5px\",\n            boxShadow: \"2px 2px 10px rgba(0, 0, 0, 0.2)\",\n            textAlign: \"center\",\n            width: \"80%\",\n          }}\n        >\n          <span role=\"img\" aria-label=\"ski\">🎿</span> Ski Resort Finder\n        </Link>\n\n        <Link\n          to=\"/distance\"\n          style={{\n            textDecoration: \"none\",\n            display: \"block\",\n            margin: \"10px auto\",\n            padding: \"15px 30px\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\",\n            background: \"#28a745\",\n            color: \"white\",\n            borderRadius: \"5px\",\n            boxShadow: \"2px 2px 10px rgba(0, 0, 0, 0.2)\",\n            textAlign: \"center\",\n            width: \"80%\",\n          }}\n        >\n          <span role=\"img\" aria-label=\"mountain\">🏔️ </span> Distance to Resort\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  return (\n    <Router>\n      {/* Corrected Routes: Ensures only one page is displayed at a time */}\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/distance\" element={<DistanceFinder />} />\n        <Route path=\"/filter\" element={<SkiResortFilter />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\n\nif (rootElement) {\n  const root = ReactDOM.createRoot(rootElement);\n  root.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n} else {\n  console.error(\"❌ React could not find the 'root' element in index.html! Check your index.html file.\");\n}"],"sourceRoot":""}